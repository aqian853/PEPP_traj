rename(
cdss_1_baseline = cd1_0,
cdss_2_baseline = cd2_0,
cdss_3_baseline = cd3_0,
cdss_4_baseline = cd4_0,
cdss_5_baseline = cd5_0,
cdss_6_baseline = cd6_0,
cdss_7_baseline = cd7_0,
cdss_8_baseline = cd8_0,
cdss_9_baseline = cd9_0
)
#Individual item scores for month 1
PEPP_2024_12_12_IDmatched <- PEPP_2024_12_12_IDmatched %>%
rename(
cdss_1_1mo = cd1_1,
cdss_2_1mo = cd2_1,
cdss_3_1mo = cd3_1,
cdss_4_1mo = cd4_1,
cdss_5_1mo = cd5_1,
cdss_6_1mo = cd6_1,
cdss_7_1mo = cd7_1,
cdss_8_1mo = cd8_1,
cdss_9_1mo = cd9_1
)
#Individual item scores for month 2
PEPP_2024_12_12_IDmatched <- PEPP_2024_12_12_IDmatched %>%
rename(
cdss_1_2mo = cd1_2,
cdss_2_2mo = cd2_2,
cdss_3_2mo = cd3_2,
cdss_4_2mo = cd4_2,
cdss_5_2mo = cd5_2,
cdss_6_2mo = cd6_2,
cdss_7_2mo = cd7_2,
cdss_8_2mo = cd8_2,
cdss_9_2mo = cd9_2
)
#Individual item scores for month 3
PEPP_2024_12_12_IDmatched <- PEPP_2024_12_12_IDmatched %>%
rename(
cdss_1_3mo = cd1_3,
cdss_2_3mo = cd2_3,
cdss_3_3mo = cd3_3,
cdss_4_3mo = cd4_3,
cdss_5_3mo = cd5_3,
cdss_6_3mo = cd6_3,
cdss_7_3mo = cd7_3,
cdss_8_3mo = cd8_3,
cdss_9_3mo = cd9_3
)
#Individual item scores for month 6
PEPP_2024_12_12_IDmatched <- PEPP_2024_12_12_IDmatched %>%
rename(
cdss_1_6mo = cd1_6,
cdss_2_6mo = cd2_6,
cdss_3_6mo = cd3_6,
cdss_4_6mo = cd4_6,
cdss_5_6mo = cd5_6,
cdss_6_6mo = cd6_6,
cdss_7_6mo = cd7_6,
cdss_8_6mo = cd8_6,
cdss_9_6mo = cd9_6
)
#Individual item scores for month 9
PEPP_2024_12_12_IDmatched <- PEPP_2024_12_12_IDmatched %>%
rename(
cdss_1_9mo = cd1_9,
cdss_2_9mo = cd2_9,
cdss_3_9mo = cd3_9,
cdss_4_9mo = cd4_9,
cdss_5_9mo = cd5_9,
cdss_6_9mo = cd6_9,
cdss_7_9mo = cd7_9,
cdss_8_9mo = cd8_9,
cdss_9_9mo = cd9_9
)
#Individual item scores for month 12
PEPP_2024_12_12_IDmatched <- PEPP_2024_12_12_IDmatched %>%
rename(
cdss_1_12mo = cd1_12,
cdss_2_12mo = cd2_12,
cdss_3_12mo = cd3_12,
cdss_4_12mo = cd4_12,
cdss_5_12mo = cd5_12,
cdss_6_12mo = cd6_12,
cdss_7_12mo = cd7_12,
cdss_8_12mo = cd8_12,
cdss_9_12mo = cd9_12
)
#Individual item scores for month 18
PEPP_2024_12_12_IDmatched <- PEPP_2024_12_12_IDmatched %>%
rename(
cdss_1_18mo = cd1_18,
cdss_2_18mo = cd2_18,
cdss_3_18mo = cd3_18,
cdss_4_18mo = cd4_18,
cdss_5_18mo = cd5_18,
cdss_6_18mo = cd6_18,
cdss_7_18mo = cd7_18,
cdss_8_18mo = cd8_18,
cdss_9_18mo = cd9_18
)
#Individual item scores for month 24
PEPP_2024_12_12_IDmatched <- PEPP_2024_12_12_IDmatched %>%
rename(
cdss_1_24mo = cd1_24,
cdss_2_24mo = cd2_24,
cdss_3_24mo = cd3_24,
cdss_4_24mo = cd4_24,
cdss_5_24mo = cd5_24,
cdss_6_24mo = cd6_24,
cdss_7_24mo = cd7_24,
cdss_8_24mo = cd8_24,
cdss_9_24mo = cd9_24
)
## Get non-na counts
# recode 77 as NA
PEPP_2024_12_12_IDmatched <- PEPP_2024_12_12_IDmatched %>%
mutate(across(starts_with("cdss"), ~ replace(., . == 77, NA)))
## Subset data for relevant clinical scores and non-NAs at baseline
PEPP_cdss_subset <- PEPP_2024_12_12_IDmatched %>%
select( contains("pin"), contains("FEP_ID"),contains("Scan_ID"), contains("cdss_"))
colnames(PEPP_cdss_subset)
PEPP_cdss_subset <- PEPP_cdss_subset %>%
filter(!is.na(cdss_total_baseline))
#Total global score w/o attention items
PEPP_2024_12_12_IDmatched <- PEPP_2024_12_12_IDmatched %>%
rename(
sans_total_baseline = SANS_0, #total SANS score at baseline
sans_total_1mo = SANS_1, #total SANS score at 1-mo follow up
sans_total_2mo = SANS_2, #total SANS score at 2-mo follow up
sans_total_3mo = SANS_3, #total SANS score at 3-mo follow up
sans_total_6mo = SANS_6, #total SANS score at 6-mo follow up
sans_total_9mo = SANS_9, #total SANS score at 9-mo follow up
sans_total_12mo = SANS_12, #total SANS score at 12-mo follow up
sans_total_18mo = SANS_18, #total SANS score at 18-mo follow up
sans_total_24mo = SANS_24 #total SANS score at 24-mo follow up
)
# Recoding NA
PEPP_2024_12_12_IDmatched <- PEPP_2024_12_12_IDmatched %>%
mutate(across(starts_with("sans"), ~ replace(., . == 77, NA)))
# Subsetting
PEPP_sans_subset <- PEPP_2024_12_12_IDmatched %>%
select( contains("pin"), contains("FEP_ID"),contains("Scan_ID"), contains("sans_"))
colnames(PEPP_sans_subset)
PEPP_sans_subset <- PEPP_sans_subset %>%
filter(!is.na(sans_total_baseline))
############ Converting to Long data
## Clean out those with less than 2 time points [clean] and remove 24mo
## Total CDSS
PEPP_cdss_long <-
PEPP_cdss_subset %>%
select(pin, cdss_total_baseline, cdss_total_1mo, cdss_total_2mo, cdss_total_3mo,
cdss_total_6mo, cdss_total_9mo, cdss_total_12mo, cdss_total_18mo,
cdss_total_24mo) %>%
pivot_longer(cols = starts_with("cdss_total_"), names_to = "time_point", values_to = "cdss_score")
PEPP_cdss_long <- PEPP_cdss_long %>%
mutate(pin = as.numeric(pin),
time_point = recode(time_point,
"cdss_total_baseline" = "0",
"cdss_total_1mo" = "1",
"cdss_total_2mo" = "2",
"cdss_total_3mo" = "3",
"cdss_total_6mo" = "6",
"cdss_total_9mo" = "9",
"cdss_total_12mo" = "12",
"cdss_total_18mo" = "18",
"cdss_total_24mo" = "24"),
time_point = as.numeric(time_point))
PEPP_cdss_long_18 <- PEPP_cdss_long %>%
filter(!time_point %in% c(24)) %>%
group_by(pin) %>%
filter(sum(!is.na(cdss_score)) >= 2) %>%
ungroup()
#merge SOFAS_0
PEPP_cdss_long_18 <- PEPP_cdss_long_18 %>%
left_join(
PEPP_2024_12_12_IDmatched %>% select(pin, SOFAS_0),
by = "pin"
)
## Subsetting CDSS scores into LV1
PEPP_cdss_subset <- PEPP_cdss_subset %>%
mutate(
gen_dep_comp_baseline = cdss_1_baseline + cdss_2_baseline + cdss_3_baseline + cdss_6_baseline + cdss_8_baseline,
gen_dep_comp_1mo = cdss_1_1mo + cdss_2_1mo + cdss_3_1mo + cdss_6_1mo + cdss_8_1mo,
gen_dep_comp_2mo = cdss_1_2mo + cdss_2_2mo + cdss_3_2mo + cdss_6_2mo + cdss_8_2mo,
gen_dep_comp_3mo = cdss_1_3mo + cdss_2_3mo + cdss_3_3mo + cdss_6_3mo + cdss_8_3mo,
gen_dep_comp_6mo = cdss_1_6mo + cdss_2_6mo + cdss_3_6mo + cdss_6_6mo + cdss_8_6mo,
gen_dep_comp_9mo = cdss_1_9mo + cdss_2_9mo + cdss_3_9mo + cdss_6_9mo + cdss_8_9mo,
gen_dep_comp_12mo = cdss_1_12mo + cdss_2_12mo + cdss_3_12mo + cdss_6_12mo + cdss_8_12mo,
gen_dep_comp_18mo = cdss_1_18mo + cdss_2_18mo + cdss_3_18mo + cdss_6_18mo + cdss_8_18mo,
gen_dep_comp_24mo = cdss_1_24mo + cdss_2_24mo + cdss_3_24mo + cdss_6_24mo + cdss_8_24mo
)
## LV1
PEPP_LV1_long <-
PEPP_cdss_subset %>%
select(pin, gen_dep_comp_baseline, gen_dep_comp_1mo, gen_dep_comp_2mo, gen_dep_comp_3mo,
gen_dep_comp_6mo, gen_dep_comp_9mo, gen_dep_comp_12mo, gen_dep_comp_18mo, gen_dep_comp_24mo) %>%
pivot_longer(cols = starts_with("gen_dep_comp_"), names_to = "time_point", values_to = "LV1_score")
PEPP_LV1_long <- PEPP_LV1_long %>%
mutate(pin = as.numeric(pin),
time_point = recode(time_point,
"gen_dep_comp_baseline" = "0",
"gen_dep_comp_1mo" = "1",
"gen_dep_comp_2mo" = "2",
"gen_dep_comp_3mo" = "3",
"gen_dep_comp_6mo" = "6",
"gen_dep_comp_9mo" = "9",
"gen_dep_comp_12mo" = "12",
"gen_dep_comp_18mo" = "18",
"gen_dep_comp_24mo" = "24"),
time_point = as.numeric(time_point))
PEPP_LV1_long_18 <- PEPP_LV1_long %>%
filter(!time_point %in% c(24)) %>%
group_by(pin) %>%
filter(sum(!is.na(LV1_score)) >= 2) %>%
ungroup()
#merge SOFAS_0
PEPP_LV1_long_18 <- PEPP_LV1_long_18 %>%
left_join(
PEPP_2024_12_12_IDmatched %>% select(pin, SOFAS_0),
by = "pin"
)
## Total SANS
PEPP_sans_long <-
PEPP_sans_subset %>%
select(pin, sans_total_baseline, sans_total_1mo, sans_total_2mo, sans_total_3mo,
sans_total_6mo, sans_total_9mo, sans_total_12mo, sans_total_18mo,
sans_total_24mo) %>%
pivot_longer(cols = starts_with("sans_total_"), names_to = "time_point", values_to = "sans_score")
PEPP_sans_long <- PEPP_sans_long %>%
mutate(pin = as.numeric(pin),
time_point = recode(time_point,
"sans_total_baseline" = "0",
"sans_total_1mo" = "1",
"sans_total_2mo" = "2",
"sans_total_3mo" = "3",
"sans_total_6mo" = "6",
"sans_total_9mo" = "9",
"sans_total_12mo" = "12",
"sans_total_18mo" = "18",
"sans_total_24mo" = "24"),
time_point = as.numeric(time_point))
PEPP_sans_long_18 <- PEPP_sans_long %>%
filter(!time_point %in% c(24)) %>%
group_by(pin) %>%
filter(sum(!is.na(sans_score)) >= 2) %>%
ungroup()
#merge SOFAS_0
PEPP_sans_long_18 <- PEPP_sans_long_18 %>%
left_join(
PEPP_2024_12_12_IDmatched %>% select(pin, SOFAS_0),
by = "pin"
)
View(PEPP_cdss_long_18)
set.seed(123)
gmm1_2_CDSS_18 <- lcmm::hlme(cdss_score ~ time_point, subject = "pin", random =~1 +
time_point, ng = 1, data = PEPP_cdss_long_18)
gmm2_2_CDSS_18 <- gridsearch(rep = 100, maxiter = 200, minit= gmm1_2_CDSS_18,
m = hlme(cdss_score ~ time_point, subject = "pin",
random=~1 + time_point ,ng = 2, data =
PEPP_cdss_long_18, mixture
=~time_point, nwg = T, classmb = ~ SOFAS_0))
gmm3_2_CDSS_18 <- gridsearch(rep = 100, maxiter =200, minit= gmm1_2_CDSS_18,
m = hlme(cdss_score ~ time_point, subject = "pin",
random=~1 + time_point,
ng = 3, data = PEPP_cdss_long_18, mixture
=~time_point, nwg = T, classmb = ~ SOFAS_0))
#make table with results for the 3 models
mod_com_gmm2_CDSS <- summarytable(gmm1_2_CDSS_18, gmm2_2_CDSS_18, gmm3_2_CDSS_18)
mod_com_gmm2_CDSS <- as.data.frame(mod_com_gmm2_CDSS)
# Extract the model with the lowest BIC
lowest_bic_mod_gmm2_CDSS <- which.min(mod_com_gmm2_CDSS$BIC)
cat("The model with the lowest BIC is: gmm2_", lowest_bic_mod_gmm2_CDSS, "\n")
View(gmm2_2_CDSS_18)
summary(gmm2_2_CDSS_18)
library(nnet)
library(haven)
library(dplyr)
## Load data
gmm_18mo_class_membership <- read.csv("gmm_class_div_18mo.csv")
getwd()
setwd("/projects/aqian/PEPP_traj/reports/GMM_class_membership")
getwd()
gmm_18mo_class_membership <- read.csv("gmm_class_div_18mo.csv")
PEPP_data <- read_sav("PEPP_2024-12-12-IDmatched.sav")
setwd("/projects/aqian/PEPP_traj")
## Load data
gmm_18mo_class_membership <- read.csv("/reports/GMM_class_membership/gmm_class_div_18mo.csv")
## Load data
gmm_18mo_class_membership <- read.csv("/projects/aqian/PEPP_traj/reports/GMM_class_membership/gmm_class_div_18mo.csv")
PEPP_data <- read_sav("/projects/aqian/PEPP_traj/docs/raw_data/PEPP_2024-12-12-IDmatched.sav")
## Change class variable as factor
gmm_class_mem <- gmm_18mo_class_membership %>%
select(contains("pin"), contains("class_"))
## joining SOFAS_0 with gmm_class_mem
SOFAS_0 <- PEPP_data %>%
select(contains("pin"), contains("SOFAS_0"))
gmm_class_mem$pin <- as.character(gmm_class_mem$pin)
SOFAS_0$pin <- as.character(SOFAS_0$pin)
gmm_class_mem_SOFAS_0 <- full_join(gmm_class_mem, SOFAS_0, by = "pin")
gmm_class_mem_SOFAS_0 <- gmm_class_mem_SOFAS_0 %>%
filter(!is.na(SOFAS_0))
print(gmm_class_mem_SOFAS_0)
## Turn into factors
gmm_class_mem_SOFAS_0$class_cdss_2 <- factor(gmm_class_mem_SOFAS_0$class_cdss_2,
levels = c(1, 2),
labels = c("Persistent_Low",
"Decreasing"))
gmm_class_mem_SOFAS_0$class_cdss_3 <- factor(gmm_class_mem_SOFAS_0$class_cdss_3,
levels = c(1, 2, 3),
labels = c("Fluctuating_High",
"Persistent_Low",
"Decreasing"))
gmm_class_mem_SOFAS_0$class_sans_2 <- factor(gmm_class_mem_SOFAS_0$class_sans_2,
levels = c(1, 2),
labels = c("Persistent_High",
"Decreasing"))
gmm_class_mem_SOFAS_0$class_sans_3 <- factor(gmm_class_mem_SOFAS_0$class_sans_3,
levels = c(1, 2, 3),
labels = c("Decrease_Sustained",
"Persistent_High",
"Gradual_Decrease"))
gmm_class_mem_SOFAS_0$class_LV1_2 <- factor(gmm_class_mem_SOFAS_0$class_LV1_2,
levels = c(1, 2),
labels = c("Persistent_Low",
"Decreasing"))
gmm_class_mem_SOFAS_0$class_LV1_3 <- factor(gmm_class_mem_SOFAS_0$class_LV1_3,
levels = c(1, 2, 3),
labels = c("Fluctuating_High",
"Persistent_Low",
"Decreasing"))
## Fit multinomail logistic regression
## CDSS 2-class =================================================================
model_cdss_2 <- multinom(class_cdss_2 ~ SOFAS_0, data = gmm_class_mem_SOFAS_0)
summary(model_cdss_2)
# calculate p-value
z <- summary(model_cdss_2)$coefficients / summary(model_cdss_2)$standard.errors
p <- 2 * (1 - pnorm(abs(z)))
p
exp(coef(model_cdss_2)) # exponentiate coefficients for odds ratios
# Predict probabilities for new values of SOFAS_0 based on the model above
new_data_cdss2 <- data.frame(SOFAS_0 = seq(min(gmm_class_mem_SOFAS_0$SOFAS_0),
max(gmm_class_mem_SOFAS_0$SOFAS_0),
length.out=100))
pred_probs_cdss2 <- predict(model_cdss_2, newdata = new_data_cdss2, type = "probs")
head(pred_probs_cdss2)
print(gmm_class_mem_SOFAS_0)
View(gmm_class_mem_SOFAS_0)
## joining CPZ_0 with gmm_class_mem_SOFAS_0
CPZ_0 <- PEPP_data %>%
select(contains("pin"), contains("CPZ_0"))
gmm_class_mem_SOFAS_0$pin <- as.character(gmm_class_mem_SOFAS_0$pin)
CPZ_0$pin <- as.character(CPZ_0$pin)
gmm_class_mem_SOFAS_CPZ <- full_join(gmm_class_mem_SOFAS_0, CPZ_0, by = "pin")
gmm_class_mem_SOFAS_CPZ <- gmm_class_mem_SOFAS_CPZ %>%
filter(!is.na(CPZ_0))
print(gmm_class_mem_SOFAS_CPZ)
View(gmm_class_mem_SOFAS_CPZ)
library(nnet)
library(haven)
library(dplyr)
## Load data
gmm_18mo_class_membership <- read.csv("/projects/aqian/PEPP_traj/reports/GMM_class_membership/gmm_class_div_18mo.csv")
PEPP_data <- read_sav("/projects/aqian/PEPP_traj/docs/raw_data/PEPP_2024-12-12-IDmatched.sav")
## Change class variable as factor
gmm_class_mem <- gmm_18mo_class_membership %>%
select(contains("pin"), contains("class_"))
## joining SOFAS_0 with gmm_class_mem
SOFAS_0 <- PEPP_data %>%
select(contains("pin"), contains("SOFAS_0"))
gmm_class_mem$pin <- as.character(gmm_class_mem$pin)
SOFAS_0$pin <- as.character(SOFAS_0$pin)
gmm_class_mem_SOFAS_0 <- full_join(gmm_class_mem, SOFAS_0, by = "pin")
gmm_class_mem_SOFAS_0 <- gmm_class_mem_SOFAS_0 %>%
filter(!is.na(SOFAS_0))
print(gmm_class_mem_SOFAS_0)
## joining CPZ_0 with gmm_class_mem_SOFAS_0
CPZ_0 <- PEPP_data %>%
select(contains("pin"), contains("CPZ_0"))
gmm_class_mem_SOFAS_0$pin <- as.character(gmm_class_mem_SOFAS_0$pin)
CPZ_0$pin <- as.character(CPZ_0$pin)
gmm_class_mem_SOFAS_CPZ <- full_join(gmm_class_mem_SOFAS_0, CPZ_0, by = "pin")
gmm_class_mem_SOFAS_CPZ <- gmm_class_mem_SOFAS_CPZ %>%
filter(!is.na(CPZ_0))
print(gmm_class_mem_SOFAS_CPZ)
## Turn into factors
gmm_class_mem_SOFAS_CPZ$class_cdss_2 <- factor(gmm_class_mem_SOFAS_CPZ$class_cdss_2,
levels = c(1, 2),
labels = c("Persistent_Low",
"Decreasing"))
gmm_class_mem_SOFAS_CPZ$class_cdss_3 <- factor(gmm_class_mem_SOFAS_CPZ$class_cdss_3,
levels = c(1, 2, 3),
labels = c("Fluctuating_High",
"Persistent_Low",
"Decreasing"))
gmm_class_mem_SOFAS_CPZ$class_sans_2 <- factor(gmm_class_mem_SOFAS_CPZ$class_sans_2,
levels = c(1, 2),
labels = c("Persistent_High",
"Decreasing"))
gmm_class_mem_SOFAS_CPZ$class_sans_3 <- factor(gmm_class_mem_SOFAS_CPZ$class_sans_3,
levels = c(1, 2, 3),
labels = c("Decrease_Sustained",
"Persistent_High",
"Gradual_Decrease"))
gmm_class_mem_SOFAS_CPZ$class_LV1_2 <- factor(gmm_class_mem_SOFAS_CPZ$class_LV1_2,
levels = c(1, 2),
labels = c("Persistent_Low",
"Decreasing"))
gmm_class_mem_SOFAS_CPZ$class_LV1_3 <- factor(gmm_class_mem_SOFAS_CPZ$class_LV1_3,
levels = c(1, 2, 3),
labels = c("Fluctuating_High",
"Persistent_Low",
"Decreasing"))
## Fit multinomail logistic regression - SOFAS_0
## CDSS 2-class =================================================================
model_cdss_2_sofas <- multinom(class_cdss_2 ~ SOFAS_0, data = gmm_class_mem_SOFAS_CPZ)
summary(model_cdss_2_sofas)
# calculate p-value
z_cdss_2_sofas <- summary(model_cdss_2_sofas)$coefficients / summary(model_cdss_2_sofas)$standard.errors
p_cdss_2_sofas <- 2 * (1 - pnorm(abs(z_cdss_2_sofas)))
p_cdss_2_sofas
exp(coef(model_cdss_2_sofas)) # exponentiate coefficients for odds ratios
## CDSS 3-class =================================================================
model_cdss_3_sofas <- multinom(class_cdss_3 ~ SOFAS_0, data = gmm_class_mem_SOFAS_CPZ)
summary(model_cdss_3_sofas)
# calculate p-value
z_cdss_3_sofas <- summary(model_cdss_3_sofas)$coefficients / summary(model_cdss_3_sofas)$standard.errors
p_cdss_3_sofas <- 2 * (1 - pnorm(abs(z_cdss_3_sofas)))
p_cdss_3_sofas
exp(coef(model_cdss_3_sofas)) # exponentiate coefficients for odds ratios
## LV1 2-class =================================================================
model_lv1_2_sofas <- multinom(class_LV1_2 ~ SOFAS_0, data = gmm_class_mem_SOFAS_CPZ)
summary(model_lv1_2_sofas)
# calculate p-value
z_lv1_2_sofas <- summary(model_lv1_2_sofas)$coefficients / summary(model_lv1_2_sofas)$standard.errors
p_lv1_2_sofas <- 2 * (1 - pnorm(abs(z_lv1_2_sofas)))
p_lv1_2_sofas
exp(coef(model_lv1_2_sofas)) # exponentiate coefficients for odds ratios
## LV1 3-class =================================================================
model_lv1_3_sofas <- multinom(class_LV1_3 ~ SOFAS_0, data = gmm_class_mem_SOFAS_CPZ)
summary(model_lv1_3_sofas)
# calculate p-value
z_lv1_3_sofas <- summary(model_lv1_3_sofas)$coefficients / summary(model_lv1_3_sofas)$standard.errors
p_lv1_3_sofas <- 2 * (1 - pnorm(abs(z_lv1_3_sofas)))
p_lv1_3_sofas
exp(coef(model_lv1_3_sofas)) # exponentiate coefficients for odds ratios
## SANS 2-class =================================================================
model_sans_2_sofas <- multinom(class_sans_2 ~ SOFAS_0, data = gmm_class_mem_SOFAS_CPZ)
summary(model_sans_2_sofas)
# calculate p-value
z_sans_2_sofas <- summary(model_sans_2_sofas)$coefficients / summary(model_sans_2_sofas)$standard.errors
p_sans_2_sofas <- 2 * (1 - pnorm(abs(z_sans_2_sofas)))
p_sans_2_sofas
exp(coef(model_sans_2_sofas)) # exponentiate coefficients for odds ratios
## SANS 3-class =================================================================
model_sans_3_sofas <- multinom(class_sans_3 ~ SOFAS_0, data = gmm_class_mem_SOFAS_CPZ)
summary(model_sans_3_sofas)
# calculate p-value
z_sans_3_sofas <- summary(model_sans_3_sofas)$coefficients / summary(model_sans_3_sofas)$standard.errors
p_sans_3_sofas <- 2 * (1 - pnorm(abs(z_sans_3_sofas)))
p_sans_3_sofas
exp(coef(model_sans_3_sofas)) # exponentiate coefficients for odds ratios
## Fit multinomail logistic regression - CPZ_0
## CDSS 2-class =================================================================
model_cdss_2_cpz <- multinom(class_cdss_2 ~ SOFAS_0, data = gmm_class_mem_SOFAS_CPZ)
summary(model_cdss_2_cpz)
# calculate p-value
z_cdss_2_cpz <- summary(model_cdss_2_cpz)$coefficients / summary(model_cdss_2_cpz)$standard.errors
p_cdss_2_cpz <- 2 * (1 - pnorm(abs(z_cdss_2_cpz)))
p_cdss_2_cpz
exp(coef(model_cdss_2_cpz)) # exponentiate coefficients for odds ratios
## CDSS 3-class =================================================================
model_cdss_3_cpz <- multinom(class_cdss_3 ~ SOFAS_0, data = gmm_class_mem_SOFAS_CPZ)
summary(model_cdss_3_cpz)
# calculate p-value
z_cdss_3_cpz <- summary(model_cdss_3_cpz)$coefficients / summary(model_cdss_3_cpz)$standard.errors
p_cdss_3_cpz <- 2 * (1 - pnorm(abs(z_cdss_3_cpz)))
p_cdss_3_cpz
exp(coef(model_cdss_3_cpz)) # exponentiate coefficients for odds ratios
## LV1 2-class =================================================================
model_lv1_2_cpz <- multinom(class_LV1_2 ~ SOFAS_0, data = gmm_class_mem_SOFAS_CPZ)
summary(model_lv1_2_cpz)
# calculate p-value
z_lv1_2_cpz <- summary(model_lv1_2_cpz)$coefficients / summary(model_lv1_2_cpz)$standard.errors
p_lv1_2_cpz <- 2 * (1 - pnorm(abs(z_lv1_2_cpz)))
p_lv1_2_cpz
exp(coef(model_lv1_2_cpz)) # exponentiate coefficients for odds ratios
## LV1 3-class =================================================================
model_lv1_3_cpz <- multinom(class_LV1_3 ~ SOFAS_0, data = gmm_class_mem_SOFAS_CPZ)
summary(model_lv1_3_cpz)
# calculate p-value
z_lv1_3_cpz <- summary(model_lv1_3_cpz)$coefficients / summary(model_lv1_3_cpz)$standard.errors
p_lv1_3_cpz <- 2 * (1 - pnorm(abs(z_lv1_3_cpz)))
p_lv1_3_cpz
exp(coef(model_lv1_3_cpz)) # exponentiate coefficients for odds ratios
## SANS 2-class =================================================================
model_sans_2_cpz <- multinom(class_sans_2 ~ SOFAS_0, data = gmm_class_mem_SOFAS_CPZ)
summary(model_sans_2_cpz)
# calculate p-value
z_sans_2_cpz <- summary(model_sans_2_cpz)$coefficients / summary(model_sans_2_cpz)$standard.errors
p_sans_2_cpz <- 2 * (1 - pnorm(abs(z_sans_2_cpz)))
p_sans_2_cpz
exp(coef(model_sans_2_cpz)) # exponentiate coefficients for odds ratios
## SANS 3-class =================================================================
model_sans_3_cpz <- multinom(class_sans_3 ~ SOFAS_0, data = gmm_class_mem_SOFAS_CPZ)
summary(model_sans_3_cpz)
# calculate p-value
z_sans_3_cpz <- summary(model_sans_3_cpz)$coefficients / summary(model_sans_3_cpz)$standard.errors
p_sans_3_cpz <- 2 * (1 - pnorm(abs(z_sans_3_cpz)))
p_sans_3_cpz
exp(coef(model_sans_3_cpz)) # exponentiate coefficients for odds ratios
